1) Yes to all
2)  String str = new String("Convert");
    Object obj;
    obj = str;
    str = (String) obj;
It has both widening (obj = str;) and narrowing (str = (String) obj;)
3)  String str = new String("Crash");
    Integer num;
    Object obj;
    obj = str;
    num = (Integer) obj;
4) Character char = new Character('w')
5) One advantage is when a value is wrapped in an object it can be treated as any other object. A disadvantage is the wrapper object can't use the normal methods the initial value can
6) First x and y are unboxed. Then the double numbers are added. The result will be a double and assigned to z
7) A generic method is a safe way to write only one method that can be used with a buch of different types
8) The compiler can possibly find a lot more type errors with a generic method because the type is never the same
9) It first appears in <> before the return type. Then can be in the return type. And then in the parameter list
10) Create an object or array with that type
11) public static <E> int count(E[] data, E target) {
      int answer = 0;
      if (target == null) {
        for (E next : data) {
          if (next == null) answer++;
        }
      } else {
        for (E next : data){
          if (target.equals(next)) answer++;
        }
      }
      return answer;
    }
13) Node
14) Yes
15) ArrayBag num = new ArrayBag();
    for (int i = 1; i <= 10; i++) numbers.add(new Integer(i));
16) target.equals(data[index])
17) it used stdin where stdin is an EasyReader
18) First prints 0 and second prints 1
19) To search for null
20) If data in the first and last node were equal then it would be false
21) x==y is true if x and y are the same node x.data.equals(y.data) is true if the data is the same


